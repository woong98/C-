#include<iostream>
#include<string>
#include<stack>

using namespace std;
/*
괄호는 쇠막대기 또는 레이저를 포함한다.
여기서 그냥 ()로 바로 괄호가 닫히는 경우에는 레이저를 표현, 그 외에는 쇠막대기를 표현한다. 

괄호 내부에 ()로 바로 오는 경우가 몇 가지가 존재하는가를 각 괄호에 대해서 세야한다
그 다음에 전체 수에 대해서 각각 전체에 대해서 +1을 해주면 된다. 
이정도 매커니즘은 알겠고

-> 여기서 그러면 필요한 자료구조가무엇인가 바로 스택

그림을 잘 보면 ()을 제외하고 (의 수 만큼 + 를 해주면 잘린 부분에 대한 덧셈을 해줄 수 있다.
따라서 (는 기본적으로 스택에 넣어주는데 ) 가 나오는 경우에는 두 가지 경우가 있다.
1. 스택에 (가 하나 남은 경우 : 이 경우는 그냥 빼준다.
2. 스택에 (가 여러개 존재하는 경우 : ( 하나를 빼준다음 남은 ( 의 갯수만큼 총 합을 더해준다. 
*/
int main()
{   
    string input_;
    cin >> input_;
    int sum = 0;
    stack<char> S;

    for(int i = 0; i < input_.size(); i++)
    {
        if(input_[i] == '(')
            S.push('(');
        else
        {
            if(input_[i - 1] == '(') //이 경우에는 () 즉 레이저가 존재하는 부분 
            {
                S.pop(); // ( 하나를 꺼내주고 
                sum += S.size(); // 사이즈만큼 더해준다
            }
            else //레이저가 아닌 경우 
            {
                S.pop();
                sum++;
            }
        }
    }

    cout << sum;

    return 0;
}

